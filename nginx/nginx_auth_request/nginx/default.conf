upstream auth-api {
    server auth:3000;
}

upstream private-api {
    server private:3002;
}

server {
  listen       80;
  listen  [::]:80;
  server_name  _;
	
	add_header X-Request-Id $request_id; # Return to client

  # internal only
  location ~ /api/auth/verify {
      deny all;
      error_page 403 = @errorAuth403;
  }

  location @errorAuth401 {
    default_type application/json;
    return 401 '{"status":"401","error":{"code": 401,"message": "the token is invalid or expired"}}';
  }

  location @errorAuth403 {
    default_type application/json;
    return 403 '{"status":"403","error":{"code": 403,"message": "forbidden"}}';
  }

  location @errorAuth500 {
    default_type application/json;
    return 403 '{"status":"500","error":{"code": 500,"message": "unexpected error"}}';
  }

  location /auth-verify {
    internal;

    set $query '';
    if ($request_uri ~* "[^\?]+\?(.*)$") {
        set $query $1;
    }
    # proxy_method POST; # Default is GET
    proxy_pass        http://auth-api/api/auth/verify?$query;
    
    proxy_redirect    off;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $server_name;     
    proxy_set_header X-Request-Id $request_id; # Pass to app server
  }

  location ~ ^/(api/auth) {
    proxy_pass http://auth-api;

    proxy_redirect off;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header Host $http_host; # proxy_set_header  Host $host;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Request-Id $request_id; # Pass to app server
  }

  location ~ ^/(api/resource) {
    auth_request /auth-verify;
    # error_page 401 = @errorAuth401;
    error_page 403 = @errorAuth403;
    error_page 500 = @errorAuth500;

    auth_request_set $x_id_token $upstream_http_x_id_token;
    # auth_request_set $x_id_token $sent_http_x_id_token; 

    proxy_pass http://private-api;
    
    proxy_redirect off;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header Host $http_host; # proxy_set_header  Host $host;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Request-Id $request_id; # Pass to app server
    proxy_set_header X-Id-Token $x_id_token; 
  }

}    